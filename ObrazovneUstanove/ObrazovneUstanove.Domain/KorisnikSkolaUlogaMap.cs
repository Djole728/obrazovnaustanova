// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.52
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace ObrazovneUstanove.Domain
{

    // KorisnikSkolaUloga
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.20.1.0")]
    public partial class KorisnikSkolaUlogaMap : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<KorisnikSkolaUloga>
    {
        public KorisnikSkolaUlogaMap()
            : this("dbo")
        {
        }

        public KorisnikSkolaUlogaMap(string schema)
        {
		            ToTable(schema + ".KorisnikSkolaUloga");
            HasKey(x => x.KorisnikSkolaUlogaId);

            Property(x => x.KorisnikId).HasColumnName(@"KorisnikId").IsRequired().HasColumnType("int");
            Property(x => x.SkolaId).HasColumnName(@"SkolaId").IsRequired().HasColumnType("int");
            Property(x => x.UlogaId).HasColumnName(@"UlogaId").IsRequired().HasColumnType("int");
            Property(x => x.AnganzmanOd).HasColumnName(@"AnganzmanOd").IsRequired().HasColumnType("date");
            Property(x => x.AnganzmanDo).HasColumnName(@"AnganzmanDo").IsRequired().HasColumnType("date");
            Property(x => x.KorisnikSkolaUlogaId).HasColumnName(@"KorisnikSkolaUlogaId").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            // Foreign keys
            HasRequired(a => a.Korisnik).WithMany(b => b.KorisnikSkolaUlogas).HasForeignKey(c => c.KorisnikId).WillCascadeOnDelete(false); // FK_KorisnikSkolaUloga_Korisnik
            HasRequired(a => a.Skola).WithMany(b => b.KorisnikSkolaUlogas).HasForeignKey(c => c.SkolaId).WillCascadeOnDelete(false); // FK_KorisnikSkolaUloga_Skola
            HasRequired(a => a.Uloga).WithMany(b => b.KorisnikSkolaUlogas).HasForeignKey(c => c.UlogaId).WillCascadeOnDelete(false); // FK_KorisnikSkolaUloga_Uloga
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
